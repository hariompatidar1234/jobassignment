c
daily_record.update!(male_count: male_count, female_count: female_count,male_avg_age: male_avg_age,female_avg_age: female_avg_age)
n
c
n
User.total_gender('male').average(:age)
n
User.total_gender('female').where(gender: "female").count
n
User.total_gender('male').count
n
DailyRecord.create(date: Date.today)
c
n
c
n
c
n
c
user_a.update(user.attributes(:id))
user_a.update(user(:id)
user_a.update(:id)
user_a.update_attribute(:id)
user_a.update(user.attributes.except(:user_id))
user_a.update(user.attributes.except(:user.id))
user_a.update(user.attributes.except(:id))
user_a
n
user_a
c
n
user_a.update_attribute(:id)
user_a.update_attributes(:id)
user_a.update_attributes
user.uuid
uuid
 user_a = User.find_by(uuid: user.uuid)
user_a['name']
user_a
 user_a = User.find_by(uuid: user.uuid)
n
user_a
 User.find_by(uuid: user.uuid)
c
users.save!
n
c
n
m
n
\
n
users
n
users
n
users
 response = HTTParty.get('https://randomuser.me/api/?results=20')
response
c
 response.parsed_response['results']
users
n
c
n
users
n
c
v
users.each do |user_data|
users =  response.parsed_response['results']
n
c
users
n
users
response.parsed_response
response.parsed_response['results']
n
c
users
3.0.0 :041 > end
3.0.0 :040 >   puts users_data.uuid
users.each do |users_data|
n
c
response.parsed_response
response.parsed_response['results']
response.parsed_response
response.parsed_response['results']
response.parsed_response
response.parsed_response['results']
response.parsed_response[results]
response.parsed_response
response.parsed_response['results']
response.parsed_response['result']
response.parsed_response
n
N
HTTParty.get('https://randomuser.me/api/?results=20')
